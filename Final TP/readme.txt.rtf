{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red1\green30\blue103;
\red10\green86\blue216;\red15\green112\blue1;\red3\green53\blue197;\red107\green0\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c0\c17647\c47843;
\cssrgb\c0\c43529\c87843;\cssrgb\c0\c50196\c0;\cssrgb\c0\c30588\c81569;\cssrgb\c50196\c0\c50196;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 Welcome to Hands Hands Revolution!!!\
\
Hands Hands Revolution is a game made using pyaudio, aubio and opencv. Using opencv, I use the camera function and take the images retrieved frame by frame and output it with all the updates on the screen. Also in opencv, I use color detection for the colors red and blue to do collision detection to check whether or not the beat was hit at the correct time. I do color detection by implementing constructing a mask for each of the colors I am detecting and then performing a a series of dilations and erosions to remove any small blobs left in the mask. It then finds contours in the mask and initializes the current x and y for the center of the ball and then draws the minimum contour circle. I used threading to run the background music at the same time as running opencv for the display. I used pyaudio to play the music and I used aubio to do beat detection. The function from aubio returns a list of the times when there is a beat. I took the list of beats and matched it with the song so that is displays a circle beat every time the song matches with the beat list. Depending on the level of difficulty I chose to display a different amount of beats. \
\
In order to run this game, you will need to run the start.py file and have all the other files and the songs that you want to use in the same folder. \
\
For this game to run properly, you will need to download homebrew, python2.7, python3, opencv, aubio, and pyaudio.\
\
For homebrew:\
	enter this entire command into the terminal:\
		\expnd0\expndtw0\kerning0
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\'94\
	then enter:\
		brew update\
	then enter:\
		nano ~/.bash_profile\
	add this to the file that opens:\
		#Homebrew\
		export PATH=/usr/local/bin:$PATH\
	save and exit the file\
	then enter:\
		source ~/.bash_profile\
\
For both python2.7 and python3:\
Follow this list of terminal commands:\
	brew install python python3\
	brew linkapps python\
	brew linkapps python3\
\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 For pyaudio:\
	open terminal and enter( pip3 pyaudio)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 For aubio:\
	open terminal and enter( pip3 aubio)\
\
For opencv:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
Follow this list of terminal commands:\
	\cf2 \cb3 brew tap homebrew/science\
	brew install opencv3 --with-contrib --with-python3 --HEAD\kerning1\expnd0\expndtw0 \
	\
	}